/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.39
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package org.gephi.libgexf;

public class DirectedGraph extends Graph {
  private long swigCPtr;

  protected DirectedGraph(long cPtr, boolean cMemoryOwn) {
    super(libgexfJNI.SWIGDirectedGraphUpcast(cPtr), cMemoryOwn);
    swigCPtr = cPtr;
  }

  protected static long getCPtr(DirectedGraph obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if(swigCPtr != 0 && swigCMemOwn) {
      swigCMemOwn = false;
      libgexfJNI.delete_DirectedGraph(swigCPtr);
    }
    swigCPtr = 0;
    super.delete();
  }

  public DirectedGraph() {
    this(libgexfJNI.new_DirectedGraph__SWIG_0(), true);
  }

  public DirectedGraph(DirectedGraph orig) {
    this(libgexfJNI.new_DirectedGraph__SWIG_1(DirectedGraph.getCPtr(orig), orig), true);
  }

  public SWIGTYPE_p_std__setT_unsigned_int_t getInEdges(long node_id) {
    return new SWIGTYPE_p_std__setT_unsigned_int_t(libgexfJNI.DirectedGraph_getInEdges(swigCPtr, this, node_id), true);
  }

  public SWIGTYPE_p_std__setT_unsigned_int_t getOutEdges(long node_id) {
    return new SWIGTYPE_p_std__setT_unsigned_int_t(libgexfJNI.DirectedGraph_getOutEdges(swigCPtr, this, node_id), true);
  }

  public SWIGTYPE_p_std__setT_unsigned_int_t getSuccessors(long node_id) {
    return new SWIGTYPE_p_std__setT_unsigned_int_t(libgexfJNI.DirectedGraph_getSuccessors(swigCPtr, this, node_id), true);
  }

  public SWIGTYPE_p_std__setT_unsigned_int_t getPredecessors(long node_id) {
    return new SWIGTYPE_p_std__setT_unsigned_int_t(libgexfJNI.DirectedGraph_getPredecessors(swigCPtr, this, node_id), true);
  }

  public long getInDegree(long node_id) {
    return libgexfJNI.DirectedGraph_getInDegree(swigCPtr, this, node_id);
  }

  public long getOutDegree(long node_id) {
    return libgexfJNI.DirectedGraph_getOutDegree(swigCPtr, this, node_id);
  }

  public boolean isSuccessor(long node_id, long successor_id) {
    return libgexfJNI.DirectedGraph_isSuccessor(swigCPtr, this, node_id, successor_id);
  }

  public boolean isPredecessor(long node_id, long predecessor_id) {
    return libgexfJNI.DirectedGraph_isPredecessor(swigCPtr, this, node_id, predecessor_id);
  }

}
